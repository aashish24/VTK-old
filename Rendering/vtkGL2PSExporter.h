/*=========================================================================

  Program:   Visualization Toolkit
  Module:    $RCSfile$
  Language:  C++
  Date:      $Date$
  Version:   $Revision$

  Copyright (c) 1993-2002 Ken Martin, Will Schroeder, Bill Lorensen 
  All rights reserved.
  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even 
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
// .NAME vtkGL2PSExporter - export a scene as a PostScript file using GL2PS.
// .SECTION Description
// vtkGL2PSExporter is a concrete subclass of vtkExporter that writes
// high quality vector PostScript files (PS/EPS) by using GL2PS.  This
// can be very useful when one requires publication quality pictures.
// This class works best with simple 3D scenes and most 2D plots.
// Please note that GL2PS has its limitations since PostScript is not
// an ideal language to represent complex 3D scenes.  Please do read
// the caveats section of this documentation.
//
// By default vtkGL2PSExporter generates PostScript output along with
// the text in portrait orientation with the background being set to
// white.  The various other options are set to sensible defaults.
//
// The output file format (FileFormat) can be either PostScript (PS),
// Encapsulated PostScript (EPS) or TeX.  The file extension is
// generated automatically depending on the FileFormat.  The default
// is PS.  When TeX output is chosen, only the text strings in the
// plot are generated and put into a picture environment.  One can
// turn on and off the text when generating PS/EPS files by using the
// Text boolean variable.  By default the text is drawn.  The
// background color is set to white by default.  To generate the same
// background as seen on screen use the DrawBackgroundOn/Off methods.
// Landscape figures can be generated by using the LandscapeOn method.
// Portrait orientation is used by default.  Several of the GL2PS
// options can be set.  The names of the ivars for these options are
// similar to the ones that GL2PS provides.  SimpleLineOffset, Silent,
// BestRoot, PS3Shading and OcclusionCull are similar to the options
// provided by GL2PS.  Please read the method documentation or the
// GL2PS documentation for more details.
//
// To use this class you need to have GL2PS installed.  You need to
// configure VTK to compile this class and also need to tell VTK where
// to find the header file (gl2ps.h) and the gl2ps library.  With gcc
// you can generate a libgl2ps.so like so:
//
// $ gcc -fPIC -g -c gl2ps.c
// $ gcc gcc -shared -o libgl2ps.so gl2ps.o -lglut

// .SECTION Caveats
// Exporting complex 3D scenes can result in huge output files.
// Generating correct output for scenes with transparency is almost
// impossible.  Generating TeX output can sometimes cause funny
// problems especially if there is no text in the scene.

// .SECTION See Also
// vtkExporter

// .SECTION Thanks
// Thanks to Prabhu Ramachandran for this class.


#ifndef __vtkGL2PSExporter_h
#define __vtkGL2PSExporter_h

#include "vtkExporter.h"

class VTK_RENDERING_EXPORT vtkGL2PSExporter : public vtkExporter
{
public:
  static vtkGL2PSExporter *New();
  vtkTypeRevisionMacro(vtkGL2PSExporter,vtkExporter);
  void PrintSelf(ostream& os, vtkIndent indent);

  // Description:
  // Specify the prefix of the files to write out. The resulting filenames
  // will have .ps or .eps or .tex appended to them depending on the
  // other options chosen.
  vtkSetStringMacro(FilePrefix);
  vtkGetStringMacro(FilePrefix);

//BTX
  enum OutputFormat
  {
      PS_FILE,
      EPS_FILE,
      TEX_FILE
  };  
//ETX

  // Description:
  // Specify the format of file to write out.  This can be one of:
  // PS_FILE, EPS_FILE, TEX_FILE.  Defaults to PS_FILE.  Depending on
  // the option chosen it generates the appropriate file (with correct
  // extension) when the Write method is called.
  vtkSetClampMacro(FileFormat, int, PS_FILE, TEX_FILE);
  vtkGetMacro(FileFormat, int);
  void SetFileFormatToPS()
    {this->SetFileFormat(PS_FILE);};
  void SetFileFormatToEPS()
    {this->SetFileFormat(EPS_FILE);};
  void SetFileFormatToTeX()
    {this->SetFileFormat(TEX_FILE);};

  // Description:
  // Turn on/off drawing the background frame.  If off (default) the
  // background is treated as white.
  vtkSetMacro(DrawBackground, int);
  vtkGetMacro(DrawBackground, int);
  vtkBooleanMacro(DrawBackground, int);

  // Description:
  // Turn on/off the GL2PS_SIMPLE_LINE_OFFSET option.  When enabled a
  // small offset is added in the z-buffer to all the lines in the
  // plot.  This results in an anti-aliasing like solution.  Defaults to
  // on.
  vtkSetMacro(SimpleLineOffset, int);
  vtkGetMacro(SimpleLineOffset, int);
  vtkBooleanMacro(SimpleLineOffset, int);

  // Description:
  // Turn on/off GL2PS messages sent to stderr (GL2PS_SILENT).  When
  // enabled GL2PS messages are suppressed.  Defaults to off.
  vtkSetMacro(Silent, int);
  vtkGetMacro(Silent, int);
  vtkBooleanMacro(Silent, int);

  // Description:
  // Turn on/off the GL2PS_BEST_ROOT option.  When enabled the
  // construction of the BSP tree is optimized by choosing the root
  // primitives leading to the minimum number of splits.  Defaults to
  // on.
  vtkSetMacro(BestRoot, int);
  vtkGetMacro(BestRoot, int);
  vtkBooleanMacro(BestRoot, int);

  // Description:
  // Turn on/off drawing the text.  If on (default) the text is drawn.
  // If the FileFormat is set to TeX output then the LaTeX picture is
  // generated.  If off text output is suppressed.
  vtkSetMacro(Text, int);
  vtkGetMacro(Text, int);
  vtkBooleanMacro(Text, int);
  
  // Description:
  // Turn on/off landscape orientation.  If off (default) the
  // orientation is set to portrait.
  vtkSetMacro(Landscape, int);
  vtkGetMacro(Landscape, int);
  vtkBooleanMacro(Landscape, int);

  // Description:
  // Turn on/off the GL2PS_PS3_SHADING option.  When enabled the
  // shfill PostScript level 3 operator is used.  Read the GL2PS
  // documentation for more details.  Defaults to on.
  vtkSetMacro(PS3Shading, int);
  vtkGetMacro(PS3Shading, int);
  vtkBooleanMacro(PS3Shading, int);

  // Description:
  // Turn on/off culling of occluded polygons (GL2PS_OCCLUSION_CULL).
  // When enabled hidden polygons are removed.  This reduces file size
  // considerably.  Defaults to on.
  vtkSetMacro(OcclusionCull, int);
  vtkGetMacro(OcclusionCull, int);
  vtkBooleanMacro(OcclusionCull, int);


protected:
  vtkGL2PSExporter();
  ~vtkGL2PSExporter();

  void WriteData();

  char *FilePrefix;
  int FileFormat;
  int DrawBackground;
  int SimpleLineOffset;
  int Silent;
  int BestRoot;
  int Text;
  int Landscape;
  int PS3Shading;
  int OcclusionCull;
  
private:
  vtkGL2PSExporter(const vtkGL2PSExporter&); // Not implemented
  void operator=(const vtkGL2PSExporter&); // Not implemented
};

#endif
