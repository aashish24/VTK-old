# Visualization Toolkit (VTK) Tcl package configuration.

package ifneeded vtkinit {@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@} {
  namespace eval ::vtk::init {
    proc load_library_package {libName libPath {libPrefix {@VTK_TCL_LIBNAME_PREFIX@}}} {
      set libExt [info sharedlibextension]
      set currentDirectory [pwd]
      set libFile [file join $libPath "$libPrefix$libName$libExt"]
      if {[catch "cd {$libPath}; load {$libFile}" errorMessage]} {
        puts $errorMessage
      }
      cd $currentDirectory
    }
    proc load_source_package {srcName srcPath} {
      set srcFile [file join $srcPath $srcName "${srcName}.tcl"]
      if {[catch "source {$srcFile}" errorMessage]} {
        puts $errorMessage
      }
    }
    proc require_package {name {version {@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@}}} {
      if {[catch "package require -exact $name $version" errorMessage]} {
        puts $errorMessage
        return 0
      } else {
        return 1
      }
    }
  }
  package provide vtkinit {@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@}
}

foreach kit { Common Filtering IO Imaging Graphics
              @VTK_TCL_RENDERING_CONFIG@ @VTK_TCL_HYBRID_CONFIG@ 
              @VTK_TCL_PATENTED_CONFIG@ @VTK_TCL_PARALLEL_CONFIG@ } {
  package ifneeded "vtk${kit}TCL" {@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@} "
    package require -exact vtkinit {@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@}
    ::vtk::init::load_library_package {vtk${kit}TCL} {@VTK_TCL_LIBRARY_DIR@}
  "
  package ifneeded "vtk[string tolower ${kit}]" {@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@} "
    package require -exact vtkinit {@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@}
    ::vtk::init::load_source_package {vtk[string tolower ${kit}]} {@VTK_TCL_SCRIPT_DIR@}
  "
}

foreach src {vtk vtkbase vtkinteraction vtktesting} {
  package ifneeded ${src} {@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@} "
    package require -exact vtkinit {@VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@}
    ::vtk::init::load_source_package ${src} {@VTK_TCL_SCRIPT_DIR@}
  "
}
