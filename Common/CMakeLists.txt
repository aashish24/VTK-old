SOURCE_FILES( Common_SRCS
vtkAbstractMapper 
vtkAbstractTransform 
vtkCallbackCommand 
vtkCell 
vtkCell3D
vtkCommand 
vtkDataArray 
vtkDataSet 
vtkFunctionParser
vtkHomogeneousTransform 
vtkLinearTransform 
vtkImplicitFunction 
vtkLocator 
vtkObjectFactory 
vtkObjectFactoryCollection
vtkOverrideInformation 
vtkOverrideInformationCollection 
vtkPlanes
vtkPointSet 
vtkScalarsToColors 
vtkViewport 
vtkWarpTransform 
vtkWindow 
vtkFunctionSet 
vtkInitialValueProblemSolver
vtkActor2D 
vtkActor2DCollection 
vtkAssemblyNode 
vtkAssemblyPath 
vtkAssemblyPaths 
vtkBitArray 
vtkByteSwap 
vtkCellArray 
vtkCellData 
vtkCellLinks 
vtkCellTypes 
vtkCharArray 
vtkCollection 
vtkContourValues 
vtkCoordinate 
vtkCriticalSection 
vtkDataObject 
vtkDataObjectCollection 
vtkDataSetAttributes 
vtkDataSetCollection 
vtkDebugLeaks 
vtkDirectory 
vtkDynamicLoader 
vtkDoubleArray 
vtkEdgeTable 
vtkEmptyCell 
vtkExplicitCell
vtkExtentTranslator 
vtkFieldData 
vtkFileOutputWindow 
vtkFloatArray 
vtkGeneralTransform 
vtkGenericCell 
vtkHeap
vtkHexahedron 
vtkIdentityTransform 
vtkIdList 
vtkIdTypeArray
vtkImageData 
vtkImageIterator
vtkImageProgressIterator
vtkImplicitFunctionCollection 
vtkIndent 
vtkInstantiator
vtkIntArray 
vtkLine 
vtkLargeInteger
vtkLogLookupTable 
vtkLongArray 
vtkLookupTable 
vtkMapper2D 
vtkMath 
vtkMatrix4x4 
vtkMatrixToHomogeneousTransform 
vtkMatrixToLinearTransform 
vtkMultiThreader 
vtkMutexLock 
vtkNonLinearCell
vtkObject 
vtkOldStyleCallbackCommand 
vtkOrderedTriangulator
vtkOutputWindow 
vtkPerspectiveTransform 
vtkPixel 
vtkPlane 
vtkPlaneCollection 
vtkPointData 
vtkPointLocator 
vtkPointLocator2D 
vtkPoints 
vtkPolyData 
vtkPolyLine 
vtkPolyVertex 
vtkPolygon 
vtkPriorityQueue 
vtkProcessObject 
vtkProp 
vtkPropAssembly 
vtkPropCollection 
vtkProperty2D 
vtkPyramid 
vtkQuad 
vtkQuadraticEdge
vtkQuadric 
vtkRectilinearGrid 
vtkReferenceCount 
vtkShortArray 
vtkSource 
vtkStructuredData 
vtkStructuredGrid 
vtkStructuredPoints 
vtkTensor 
vtkTetra 
vtkTimeStamp 
vtkTimerLog 
vtkTransform 
vtkTransformCollection 
vtkTriangle 
vtkTriangleStrip 
vtkUnsignedCharArray 
vtkUnsignedIntArray 
vtkUnsignedLongArray 
vtkUnsignedShortArray 
vtkUnstructuredGrid 
vtkVersion 
vtkVertex 
vtkVoidArray 
vtkVoxel 
vtkWedge 
vtkWindowLevelLookupTable 
vtkInterpolatedVelocityField 
vtkRungeKutta2 
vtkRungeKutta4 
vtkRungeKutta45
vtkXMLFileOutputWindow 
vtkErrorCode
)

ABSTRACT_FILES(
vtkAbstractMapper 
vtkAbstractTransform 
vtkAttributeData 
vtkCallbackCommand 
vtkCell 
vtkCell3D
vtkCommand 
vtkDataArray 
vtkDataSet 
vtkExplicitCell
vtkHomogeneousTransform 
vtkLinearTransform 
vtkImplicitFunction 
vtkLocator 
vtkNonLinearCell
vtkObjectFactory 
vtkOldStyleCallbackCommand 
vtkOverrideInformation 
vtkOverrideInformationCollection 
vtkPointSet 
vtkScalarsToColors 
vtkSource 
vtkViewport 
vtkWarpTransform 
vtkWindow 
vtkFunctionSet 
vtkInitialValueProblemSolver
)

IF (WIN32)
  SOURCE_FILES(Common_SRCS vtkWin32OutputWindow)
ENDIF (WIN32)
WRAP_EXCLUDE_FILES(
  vtkLargeInteger 
  vtkCommand 
  vtkCallbackCommand 
  vtkOldStyleCallbackCommand
  vtkErrorCode
  vtkImageIterator
  vtkImageProgressIterator
)

IF(VTK_MAKE_INSTANTIATOR)
  # Setup vtkInstantiator registration for this library's classes.
  VTK_MAKE_INSTANTIATOR(vtkCommonInstantiator CommonInstantiator_SRCS
                        Common_SRCS
                        EXPORT_MACRO VTK_COMMON_EXPORT
                        HEADER_LOCATION ${VTK_BINARY_DIR})
  ADD_LIBRARY(vtkCommon Common_SRCS CommonInstantiator_SRCS)
  INSTALL_FILES(/include/vtk .h ${VTK_BINARY_DIR}/vtkCommonInstantiator)
ELSE(VTK_MAKE_INSTANTIATOR)
  ADD_LIBRARY(vtkCommon Common_SRCS)
ENDIF(VTK_MAKE_INSTANTIATOR)

# Allow the user to customize their build with some local options
#
INCLUDE (${VTK_BINARY_DIR}/Common/LocalUserOptions.cmake OPTIONAL)
INCLUDE (${VTK_SOURCE_DIR}/Common/LocalUserOptions.cmake OPTIONAL)

# if we are wrapping into Tcl then add the library and extra 
# source files
#
IF (VTK_WRAP_TCL)
  VTK_WRAP_TCL(vtkCommonTCL CommonTCL_SRCS Common_SRCS)
  IF (APPLE)
    ADD_LIBRARY(vtkCommonTCL SHARED CommonTCL_SRCS vtkTclUtil)
  ELSE (APPLE)
    ADD_LIBRARY(vtkCommonTCL CommonTCL_SRCS vtkTclUtil)
  ENDIF (APPLE)
  TARGET_LINK_LIBRARIES (vtkCommonTCL ${TCL_LIBRARY})
  INSTALL_TARGETS(/lib/vtk vtkCommonTCL)
  INSTALL_FILES(/include/vtk .h
    vtkTclUtil
  )
ENDIF (VTK_WRAP_TCL)

# if we are wrapping into Python then add the library and extra 
# source files
#
IF (VTK_WRAP_PYTHON)
  VTK_WRAP_PYTHON(vtkCommonPython CommonPython_SRCS Common_SRCS)
  IF (APPLE)
    ADD_LIBRARY(vtkCommonPython MODULE CommonPython_SRCS vtkPythonUtil)
  ELSE (APPLE)
    ADD_LIBRARY(vtkCommonPython SHARED CommonPython_SRCS vtkPythonUtil)
  ENDIF(APPLE)
  IF(WIN32)
    TARGET_LINK_LIBRARIES (vtkCommonPython 
                           debug ${PYTHON_DEBUG_LIBRARY} 
                           optimized ${PYTHON_LIBRARY})
  ELSE(WIN32)
    TARGET_LINK_LIBRARIES (vtkCommonPython ${PYTHON_LIBRARY})
  ENDIF(WIN32)
  INSTALL_TARGETS(/lib/vtk vtkCommonPython)
  INSTALL_FILES(/include/vtk .h
    vtkPythonUtil
  )
ENDIF (VTK_WRAP_PYTHON)

# if we are wrapping into Java then add the library and extra 
# source files
#
IF (VTK_WRAP_JAVA)
  VTK_WRAP_JAVA(vtkCommonJava CommonJava_SRCS Common_SRCS)
  ADD_LIBRARY(vtkCommonJava SHARED CommonJava_SRCS vtkJavaUtil)
  INSTALL_TARGETS(/lib/vtk vtkCommonJava)
  INSTALL_FILES(/include/vtk .h
    vtkJavaUtil
  )
ENDIF (VTK_WRAP_JAVA)

LINK_LIBRARIES (vtkCommon )

INSTALL_TARGETS(/lib/vtk vtkCommon)
INSTALL_FILES(/include/vtk .h Common_SRCS 
  vtkCellType
  vtkSetGet 
  vtkSystemIncludes
  vtkWin32Header 
  )

