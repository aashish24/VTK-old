PROJECT(VTK)

SUBDIRS(Wrapping Common Filtering)

BUILD_SHARED_LIBRARIES()

IF (WIN32)
  IF (BUILD_SHARED_LIBS)
    ADD_DEFINITIONS(-DVTKDLL)
  ELSE (BUILD_SHARED_LIBS)
    ADD_DEFINITIONS(-DVTKSTATIC)
  ENDIF (BUILD_SHARED_LIBS)
ENDIF (WIN32)

#
# get information for Tcl wrapping 
#
OPTION(VTK_WRAP_TCL "wrap classes into the TCL intepreted language")
IF (VTK_WRAP_TCL)
  # try to find the Tcl libraries
  FIND_LIBRARY(TCL82_LIB_PATH tcl82 "C:/Program Files/Tcl/lib")
  IF (TCL82_LIB_PATH)
    LINK_LIBRARIES (tcl82)
    LINK_DIRECTORIES (${TCL82_LIB_PATH})
  ELSE (TCL82_LIB_PATH)
    FIND_LIBRARY(TCL80_LIB_PATH tcl80 /usr/lib)
    IF (TCL80_LIB_PATH)
      LINK_LIBRARIES (tcl80)
      LINK_DIRECTORIES (${TCL80_LIB_PATH})
    ENDIF (TCL80_LIB_PATH)
  ENDIF (TCL82_LIB_PATH)
    
  FIND_PATH(TCL_INCLUDE_PATH tcl.h /usr/include /usr/local/include)
  IF (TCL_INCLUDE_PATH)
    INCLUDE_DIRECTORIES(${TCL_INCLUDE_PATH})
  ENDIF (TCL_INCLUDE_PATH)
  FIND_FILE(VTK_WRAP_HINTS hints ${VTK_SOURCE_DIR}/Wrapping )
  UTILITY_SOURCE(VTK_WRAP_TCL_EXE vtkWrapTcl Wrapping vtkWrapTcl.c)
ENDIF (VTK_WRAP_TCL)

#
# get information for Python wrapping 
#
OPTION(VTK_WRAP_PYTHON "wrap classes into the Python interpreted language")
IF (VTK_WRAP_PYTHON)
  FIND_LIBRARY(PY_LIB_PATH python21_d )
  FIND_LIBRARY(PY_LIB_PATH2 python21)
  FIND_PATH(PY_INCLUDE_PATH Python.h)
  FIND_FILE(VTK_WRAP_HINTS hints ${VTK_SOURCE_DIR}/Wrapping )
  UTILITY_SOURCE(VTK_WRAP_PYTHON_EXE vtkWrapPython Wrapping vtkWrapPython.c)
  LINK_LIBRARIES (debug python21_d optimized python21)
  INCLUDE_DIRECTORIES(${PY_INCLUDE_PATH})
ENDIF (VTK_WRAP_PYTHON)

INCLUDE_DIRECTORIES(
${VTK_BINARY_DIR} 
${VTK_SOURCE_DIR}/Common
${VTK_SOURCE_DIR}/Filtering
${VTK_SOURCE_DIR}/rendering 
${VTK_SOURCE_DIR}/imaging
${VTK_SOURCE_DIR}/io
${VTK_SOURCE_DIR}/implicit
${VTK_SOURCE_DIR}/graphics
)

LINK_DIRECTORIES(
${VTK_BINARY_DIR}/Common 
${VTK_BINARY_DIR}/Filtering
${VTK_BINARY_DIR}/rendering
${VTK_BINARY_DIR}/imaging
${VTK_BINARY_DIR}/io
${VTK_BINARY_DIR}/implicit
${VTK_BINARY_DIR}/graphics
${PY_LIB_PATH}
${PY_LIB_PATH2}
)

IF (UNIX)
  LINK_LIBRARIES(${THREAD_LIBS} ${DL_LIBS} -lm)
ENDIF (UNIX)

CONFIGURE_FILE(
${VTK_SOURCE_DIR}/vtkConfigure.h.in 
${VTK_BINARY_DIR}/vtkConfigure.h)

CONFIGURE_FILE(
${VTK_SOURCE_DIR}/vtkToolkits.h.in 
${VTK_BINARY_DIR}/vtkToolkits.h)
